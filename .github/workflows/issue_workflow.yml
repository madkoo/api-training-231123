name: Issue Triggered Workflow

on:
  issues:
    types: [opened, edited]

jobs:
  get-token:
    runs-on: ubuntu-latest
    outputs:
        token: ${{ steps.get_workflow_token_target.outputs.token }}
    steps:
        - name: Get Token for checkout target organizatiom
          id: get_workflow_token_target
          uses: peter-murray/workflow-application-token-action@v2
          with:
              application_id: ${{ secrets.APP_ID }}
              application_private_key: ${{ secrets.APP_SECRET }}
  
  start-workflow:
       needs: get-token
       uses: ./.github/workflows/comment_in_issue_workflow.yml
       with:
        issue_comment: "Workflow started"
        issue_number: ${{ github.event.issue.number }}
       secrets: 
         temp-token: ${{ needs.get-token.outputs.token }}
  
  handle-issue:
    needs: start-workflow
    runs-on: ubuntu-latest
    steps:
    
        # Checkout
        - name: Checkout
          uses: actions/checkout@v3

        #TODO: Add step to read input by using action peter-murray/issue-forms-body-parser
        - name: Run Issue form parser
          id: parse
          uses: peter-murray/issue-forms-body-parser@v2.0.0
          with:
            issue_id: ${{ github.event.issue.number }}
            separator: '###'
            label_marker_start: '>>'
            label_marker_end: '<<'


        # Step to read input by using 
        - name: Publish output variables
          uses: actions/github-script@v7
          id: generate_variables
          env:
            demo_payload: ${{ steps.parse.outputs.payload  }}
          with:
            script: |
                  demoPayload = JSON.parse(process.env.demo_payload);
                  const repository = demoPayload['repo-name'];
                  return repository;

        - name: Create a New Repository
          uses: actions/github-script@v7
          with:
            github-token: ${{ secrets.MY_PAT }}
            script: |
              const repoName = ${{ steps.generate_variables.outputs.result }};
              await github.rest.repos.createForAuthenticatedUser({
                name: repoName
              });
    
  finish-workflow:
       needs: handle-issue
       uses: ./.github/workflows/comment_in_issue_workflow.yml
       with:
        issue_comment: 'Workflow finished 🏁'
        issue_number: ${{ github.event.issue.number }}
       secrets: 
         temp-token: ${{ needs.get-token.outputs.token }}

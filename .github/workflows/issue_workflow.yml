name: Issue Triggered Workflow

on:
  issues:
    types: [opened, edited]

jobs:
  handle-issue:
    runs-on: ubuntu-latest
    steps:
    
        # Checkout
        - name: Checkout
          uses: actions/checkout@v3

        #Get token
        - name: Get Token for checkout target organizatiom
          id: get_workflow_token_target
          uses: peter-murray/workflow-application-token-action@v2
          with:
            application_id: ${{ secrets.APP_ID }}
            application_private_key: ${{ secrets.APP_SECRET }}
          

        #TODO: Add step to read input by using action peter-murray/issue-forms-body-parser
        - name: Run Issue form parser
          id: parse
          uses: peter-murray/issue-forms-body-parser@v2.0.0
          with:
            issue_id: ${{ github.event.issue.number }}
            separator: '###'
            label_marker_start: '>>'
            label_marker_end: '<<'

        - name: Start Workflow Comment
          uses: actions/github-script@v7
          with:
            github-token: ${{ steps.get_workflow_token_target.outputs.token }}
            script: |
              const issueComment = context.payload.issue.number;
              github.rest.issues.createComment({
                issue_number: issueComment,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: 'Workflow started 🚀'
              });

        # Step to read input by using 
        - name: Publish output variables
          uses: actions/github-script@v7
          id: generate_variables
          env:
            demo_payload: ${{ steps.parse.outputs.payload  }}
          with:
            script: |
                  demoPayload = JSON.parse(process.env.demo_payload);
                  const repository = demoPayload['repo-name'];
                  return repository;
        
       # Cannot use inside steps
       #- name: Call Reusable Workflow
       #   uses: ./.github/workflows/create_repo_workflow.yml
       #   with:
       #     repo-name: ${{ steps.generate_variables.outputs.result }}
       #     temp-token: ${{ steps.get_workflow_token_target.outputs.token }}

        - name: Create a New Repository
          uses: actions/github-script@v7
          with:
            github-token: ${{ steps.get_workflow_token_target.outputs.token }}
            script: |
              const repoName = ${{ steps.generate_variables.outputs.result }};
              // Logic to create a new repository
              github.rest.repos.createForAuthenticatedUser({
                repoName,
              });

        - name: Finish Workflow Comment
          uses: actions/github-script@v6
          with:
            github-token: ${{ steps.get_workflow_token_target.outputs.token }}
            script: |
              const issueComment = context.payload.issue.number;
              github.rest.issues.createComment({
                issue_number: issueComment,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: 'Workflow finished 🏁'
              });
